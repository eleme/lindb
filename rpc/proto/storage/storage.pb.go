// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage.proto

package storage

import (
	context "context"
	fmt "fmt"
	common "github.com/eleme/lindb/rpc/proto/common"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0xa5, 0x78, 0x92,
	0xf3, 0x73, 0x73, 0xf3, 0xf3, 0x20, 0xc2, 0x46, 0x4e, 0x5c, 0x3c, 0xe1, 0x45, 0x99, 0x25, 0xa9,
	0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x46, 0x5c, 0xdc, 0x60, 0x7e, 0x40, 0x7e, 0x66,
	0x5e, 0x49, 0xb1, 0x10, 0xbf, 0x1e, 0x54, 0x75, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x94,
	0x00, 0x42, 0xa0, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x89, 0xc1, 0x49, 0xe0, 0xc4, 0x23, 0x39,
	0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c, 0xf1, 0x58, 0x8e, 0x21, 0x89, 0x0d,
	0x6c, 0xb8, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x94, 0xa0, 0xeb, 0xe1, 0x84, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WriteServiceClient is the client API for WriteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WriteServiceClient interface {
	WritePoints(ctx context.Context, in *common.Request, opts ...grpc.CallOption) (*common.Response, error)
}

type writeServiceClient struct {
	cc *grpc.ClientConn
}

func NewWriteServiceClient(cc *grpc.ClientConn) WriteServiceClient {
	return &writeServiceClient{cc}
}

func (c *writeServiceClient) WritePoints(ctx context.Context, in *common.Request, opts ...grpc.CallOption) (*common.Response, error) {
	out := new(common.Response)
	err := c.cc.Invoke(ctx, "/storage.WriteService/WritePoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WriteServiceServer is the server API for WriteService service.
type WriteServiceServer interface {
	WritePoints(context.Context, *common.Request) (*common.Response, error)
}

func RegisterWriteServiceServer(s *grpc.Server, srv WriteServiceServer) {
	s.RegisterService(&_WriteService_serviceDesc, srv)
}

func _WriteService_WritePoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WriteServiceServer).WritePoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.WriteService/WritePoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WriteServiceServer).WritePoints(ctx, req.(*common.Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _WriteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.WriteService",
	HandlerType: (*WriteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WritePoints",
			Handler:    _WriteService_WritePoints_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage.proto",
}
